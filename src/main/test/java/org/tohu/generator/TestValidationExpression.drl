package org.tohu.generator
  
import org.tohu.Questionnaire;
import org.tohu.Group;
import org.tohu.Question;
import org.tohu.MultipleChoiceQuestion;
import org.tohu.Note;
import org.tohu.InvalidAnswer;

query "find invalid answers"
	invalidAnswer : InvalidAnswer ()
end

rule "validate email"
dialect "java"
	when
		$question : Question ( id == "email", textAnswer not matches "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$" )
	then 
		InvalidAnswer invalidAnswer = new InvalidAnswer($question.getId(), "Invalid answer that does not match expression");
		insert (invalidAnswer);
end

rule "validate postcode"
dialect "java"
	when
		$question : Question ( id == "postcode", textAnswer not matches "^(0[289][0-9]{2})|([1345689][0-9]{3})|(2[0-8][0-9]{2})|(290[0-9])|(291[0-4])|(7[0-4][0-9]{2})|(7[8-9][0-9]{2})$" )
	then 
		InvalidAnswer invalidAnswer = new InvalidAnswer($question.getId(), "Invalid answer that does not match expression");
		insert (invalidAnswer);
end

rule "validate phone"
dialect "java"
	when
		$question : Question ( id == "phone", textAnswer not matches "^1300\d{6}$)|(^1800|1900|1902\d{6}$)|(^0[2|3|7|8]{1}[0-9]{8}$)|(^13\d{4}$)|(^04\d{2,3}\d{6}$" )
	then 
		InvalidAnswer invalidAnswer = new InvalidAnswer($question.getId(), "Invalid answer that does not match expression");
		insert (invalidAnswer);
end
